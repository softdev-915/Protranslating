const Router = require('../../../../components/application/route');
const controller = require('./portalcat-documents-controller');

const router = module.exports = Router.create();

router.get('/lsp/{lspId}/portalcat/documents/{pipelineId}/{actionId}/{fileId}',
  controller.serveActionFile,
  {
    tags: [
      'PortalCAT',
      'Document',
    ],
    produces: ['application/octet-stream'],
    parameters: [{
      name: 'lspId',
      in: 'path',
      description: 'The lsp\'s id',
      type: 'string',
      required: true,
    },
    {
      name: 'pipelineId',
      in: 'path',
      description: 'The pipeline\'s id',
      type: 'string',
      required: true,
    },
    {
      name: 'actionId',
      in: 'path',
      description: 'The action\'s id',
      type: 'string',
      required: true,
    },
    {
      name: 'fileId',
      in: 'path',
      description: 'The file\'s id',
      type: 'string',
      required: true,
    }],
    description: 'Returns a file generated by pipeline\'s action',
    summary: 'Get action\'s file',
    responses: {
      200: {
        description: 'File\'s content',
        schema: {
          type: 'file',
        },
      },
    },
  });

router.get('/lsp/{lspId}/portalcat/documents/{pipelineId}/action-files',
  controller.serveActionsFilesZip,
  {
    tags: [
      'PortalCAT',
      'Document',
    ],
    produces: ['application/octet-stream'],
    parameters: [{
      name: 'lspId',
      in: 'path',
      description: 'The lsp\'s id',
      type: 'string',
      required: true,
    },
    {
      name: 'pipelineId',
      in: 'path',
      description: 'The pipeline\'s id',
      type: 'string',
      required: true,
    }],
    description: 'Returns a Zip containing files generated by all pipeline\'s actions',
    summary: 'Get all actions files',
    responses: {
      200: {
        description: 'Zip containing files generated by all pipeline\'s actions',
        schema: {
          type: 'file',
        },
      },
    },
  });
