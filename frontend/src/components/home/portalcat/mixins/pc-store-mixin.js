import { mapGetters, mapMutations, mapActions, mapState } from 'vuex';
import * as pcMutations from '../../../../stores/modules/portalcat/types';

const PORTALCAT_STORE_MODULE_NAME = 'portalCat';

export default {
  computed: {
    ...mapGetters('app', ['userLogged']),
    ...mapGetters(PORTALCAT_STORE_MODULE_NAME, [
      'documentById',
      'pipelineById',
      'segmentById',
      'pipelineErrorByType',
      'isSegmentLoadingById',
      'repetitionById',
      'segmentRepetitionsById',
      'useMt',
    ]),
    ...mapState(PORTALCAT_STORE_MODULE_NAME, [
      'request',
      'workflow',
      'task',
      'activeDocument',
      'documents',
      'isLoading',
      'isActionFilesModalOpened',
      'activeDownloads',
      'segments',
      'isPipelinesLoading',
      'pipelines',
      'taskConfig',
      'pipelinesErrors',
      'isPipelineInProgress',
      'suggestions',
      'suggestionsAreLoading',
      'resourcesSearchParams',
      'confirmDialogOptions',
      'pickedResource',
      'searchedSegments',
      'requestProgress',
      'segmentHistoryId',
      'repetitions',
      'isQaReportLoading',
      'segmentsWithQaIssues',
      'suggestionsModel',
      'mtEngine',
      'selectedSegments',
    ]),
  },
  methods: {
    ...mapMutations(PORTALCAT_STORE_MODULE_NAME, {
      resetState: pcMutations.PORTALCAT_RESET,
      setIsLoading: pcMutations.PORTALCAT_SET_IS_LOADING,
      storeRequest: pcMutations.PORTALCAT_STORE_REQUEST,
      storeWorkflow: pcMutations.PORTALCAT_STORE_WORKFLOW,
      storeTask: pcMutations.PORTALCAT_STORE_TASK,
      storeDocuments: pcMutations.PORTALCAT_STORE_DOCUMENTS,
      storePipelines: pcMutations.PORTALCAT_STORE_PIPELINES,
      setActionFilesModalOpened: pcMutations.PORTALCAT_SET_ACTION_FILES_MODAL_OPENED,
      setActiveDownloads: pcMutations.PORTALCAT_SET_ACTIVE_DOWNLOADS,
      setPipelineStatus: pcMutations.PORTALCAT_SET_PIPELINE_STATUS,
      setResourcesSearchParams: pcMutations.PORTALCAT_SET_RESOURCES_SEARCH_PARAMS,
      setConfirmDialogOptions: pcMutations.PORTALCAT_SET_CONFIRM_DIALOG_OPTIONS,
      setPickedResource: pcMutations.PORTALCAT_SET_PICKED_RESOURCE,
      setSegmentIsLoading: pcMutations.PORTALCAT_SET_SEGMENT_IS_LOADING,
      setSearchedSegments: pcMutations.PORTALCAT_SET_SEARCHED_SEGMENTS,
      setSegmentHistoryId: pcMutations.PORTALCAT_SET_SEGMENT_HISTORY_ID,
      setRepetitions: pcMutations.PORTALCAT_SET_REPETITIONS,
      setFileSegment: pcMutations.PORTALCAT_SET_SEGMENT,
      setSuggestionsModel: pcMutations.PORTALCAT_SET_SUGGESTIONS_MODEL,
      setSuggestionsEngine: pcMutations.PORTALCAT_SET_SUGGESTIONS_ENGINE,
      patchFileSegment: pcMutations.PORTALCAT_PATCH_SEGMENT,
    }),
    ...mapActions(PORTALCAT_STORE_MODULE_NAME, [
      'fetchPipelines',
      'initPortalCat',
      'fetchFiles',
      'setActiveDocument',
      'fetchFileSegments',
      'runPipelines',
      'fetchPipelineStatus',
      'stopPipelines',
      'initTaskConfig',
      'saveTaskConfig',
      'joinFileSegments',
      'splitFileSegment',
      'searchSuggestions',
      'updateFileSegment',
      'saveFileSegment',
      'searchSegments',
      'replaceSegmentsContent',
      'fetchRequestProgress',
      'fetchRepetitions',
      'fetchFileSegmentById',
      'removeSegmentFromSearchedSegments',
      'fetchSegmentsWithQaIssues',
      'setSuggestionsModel',
      'setTaskConfig',
      'updateFileSegmentLocked',
      'updateFileSegmentQaIssues',
      'setSelectedSegments',
    ]),
  },
};
